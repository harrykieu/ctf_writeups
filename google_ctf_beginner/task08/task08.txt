Using pngcheck -v to check the file -> found the suspect chunk eDIH (maybe reversed of HIDe?)
    +-------------------------------------------------------------------------------------------------------+
    |    chunk eDIH at offset 0x00142, length 1:  illegal (unless recently approved) unknown, public chunk  |
    |    ERRORS DETECTED in /home/hai/Desktop/hideandseek.png                                               |
    +-------------------------------------------------------------------------------------------------------+
See https://www.oreilly.com/library/view/png-the-definitive/9781565925427/17_chapter-08.html to get the idea of chunk.
Using pngchunks to find the eDIH chunks -> 48 chunks of that type (check in file stats.txt)
Each chunk has data length 1 -> maybe it represents a letter?
=> Extracting them and later on converted into normal string
In hex editor, I found that 4 byte 65 44 49 48 (b'\x65\x44\x49\x48' in Python) represents the eDIH chunk indication, 
follow by 1 byte of data. I wrote a script to extract eDIH chunks and converted to string
=> Output: Q1RGe0RpZFlvdUtub3dQTkdpc1Byb25vdW5jZWRQSU5HP30=
The string ends with '=' -> base64 format. Decode the string using base64, I found the flag:
CTF{DidYouKnowPNGisPronouncedPING?}
